name: Test suite

on:
  schedule:
    - cron: '0 22 * * *'
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:
    type: choice

jobs:
  meshpy-testing:
    name: ${{ matrix.os-version }} python${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.12"]
    runs-on: ${{ matrix.os-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run the test suite
        uses: ./.github/actions/run_tests
        with:
          install-command: "-e .[CI-CD]"
      - name: Upload test results on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.job}}-${{ matrix.os-version }}-python${{ matrix.python-version }}-${{github.run_number}}
          path: ${{ env.PYTEST_TMPDIR }}

  # meshpy-testing-cubitpy:
  #   name: self-hosted with CubitPy
  #   runs-on: self-hosted
  #   defaults:
  #     run:
  #       shell: bash
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #     - name: Setup virtual python environment
  #       uses: ./.github/actions/setup_virtual_python_environment
  #       with:
  #         python-exe: /home_local/github-runner/testing_lib/spack/opt/spack/linux-ubuntu20.04-icelake/gcc-9.4.0/python-3.12.1-qnjucxirxh534suwewl6drfa237u6t7w/bin/python
  #     - name: Run the test suite
  #       uses: ./.github/actions/run_tests
  #       with:
  #         source-command: "source python-testing-environment/bin/activate"
  #         install-command: "-e .[CI-CD]"
  #         additional-pytest-flags: "--CubitPy"
  #     - name: Upload test results on failure
  #       if: failure()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{github.job}}-${{github.run_number}}
  #         path: ${{ env.PYTEST_TMPDIR }}

  meshpy-testing-4C-arborx:
    name: ubuntu-latest with 4C and ArborX
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4c-multiphysics/4c:main
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup virtual python environment
        uses: ./.github/actions/setup_virtual_python_environment
      - name: Build ArborX geometric search
        uses: ./.github/actions/build_arbrox_geometric_search
      - name: Run the test suite
        uses: ./.github/actions/run_tests
        with:
          source-command: "source python-testing-environment/bin/activate"
          install-command: "-e .[CI-CD]"
          additional-pytest-flags: "--4C --ArborX"
      - name: Upload test results on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.job}}-${{github.run_number}}
          path: ${{ env.PYTEST_TMPDIR }}
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
      - name: Create coverage badge
        run: |
          cd ${GITHUB_WORKSPACE}
          source python-testing-environment/bin/activate
          coverage-badge -o coverage.svg
      - name: Upload coverage badge
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: coverage.svg

  # meshpy-performance-testing:
  #   name: performance tests
  #   runs-on: self-hosted
  #   continue-on-error: true
  #   defaults:
  #     run:
  #       shell: bash
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #     - name: Setup virtual python environment
  #       uses: ./.github/actions/setup_virtual_python_environment
  #       with:
  #         python-exe: /home_local/github-runner/testing_lib/spack/opt/spack/linux-ubuntu20.04-icelake/gcc-9.4.0/python-3.12.1-qnjucxirxh534suwewl6drfa237u6t7w/bin/python
  #     - name: Run the test suite
  #       uses: ./.github/actions/run_tests
  #       with:
  #         source-command: "source python-testing-environment/bin/activate"
  #         install-command: "-e .[CI-CD]"
  #         additional-pytest-flags: "--performance-tests --exclude-standard-tests -s --no-cov"
  #     - name: Upload test results on failure
  #       if: failure()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{github.job}}-${{github.run_number}}
  #         path: ${{ env.PYTEST_TMPDIR }}
